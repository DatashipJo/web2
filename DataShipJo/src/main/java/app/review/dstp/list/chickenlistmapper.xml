<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="app.review.dstp.list.ChickenListMapper">

	<select id="getUserById"
		resultType="app.review.dstp.vo.StoreVo"
		parameterType="Integer">
		SELECT num,store,adress,rating
		FROM ck_store
		WHERE num = #{num}
	</select>
<!--
<<<<<<< HEAD
	<select id="getChickenList"
		parameterType = "String"
		resultType="app.review.dstp.vo.StoreVo">
		SELECT num,store,adress,s_rating,img
      FROM ck_store WHERE adress LIKE '%종로구%'
=======  -->
	<select id="getChickenTest"
		resultType = "app.review.dstp.vo.StoreVo">
		SELECT JSON_OBJECT('id',id, 'date', date, 'rating', rating, 'review', review) FROM ck_review;
	</select>
<!--	
<<<<<<< HEAD
	<select id="getDetailList"
		resultType="app.review.dstp.vo.StoreVo">
		SELECT id,review,rating,date,num,fk
      FROM ck_review where fk = 1 order by num desc limit 0,6
=======  -->
	<select id="getChickenMore"
		parameterType = "integer"
		resultType="app.review.dstp.vo.StoreVo">
		SELECT * FROM ck_review where fk = #{num}
	</select>
	
	<select id="getChickenList"
		parameterType = "String"
		resultType="app.review.dstp.vo.StoreVo">
		SELECT num,store,adress,s_rating,img
		FROM ck_store
	</select>

	<select id="getChickenList2"
		parameterType = "String"
		resultType="app.review.dstp.vo.StoreVo">
		SELECT num,store,adress,s_rating,img
		FROM ck_store WHERE adress LIKE '${groupedArea}'
	</select>
	
	<select id="getDetailList2"
		parameterType="integer"
        resultType="app.review.dstp.vo.StoreVo">
        SELECT A.* , B.* 
        FROM ck_store A, ck_review B 
        WHERE A.num = B.fk and A.num = #{num} order by B.num limit 0,5
    </select>
    
    <select id="getDetailList"
		parameterType="app.review.dstp.vo.StoreVo"
        resultType="app.review.dstp.vo.StoreVo">
        select C.*
        from (
			SELECT row_number() over(order by B.date desc) as rnum,
				A.store, A.adress, A.s_rating,
		        B.rating, B.date, B.id, B.review
			FROM ck_store A, ck_review B 
			WHERE A.num = B.fk and A.num = #{num}
		) as C
		where C.rnum between #{startNum} and #{endNum}
    </select>
    
    <select id="getMoreView"
		parameterType="integer"
        resultType="app.review.dstp.vo.StoreVo">
        SELECT A.* , B.* 
        FROM ck_store A, ck_review B 
        WHERE A.num = B.fk and A.num = #{num};
    </select>
	
	<select id="getStore"
		parameterType="integer"
		resultType="app.review.dstp.vo.StoreVo">
		SELECT store,adress,s_rating FROM ck_store WHERE num = #{num};

	</select>
	
	<!--insert 요소는 resultType 속성이 없어도 생성된 행의 수(정수)가 리턴됨-->
    <insert id="insertUser" 
    	parameterType="app.review.dstp.vo.StoreVo">
    	INSERT INTO edel_notice VALUES(NULL,#{title},#{name},#{content},NULL,NOW(),#{nj_url})
    </insert>
    
    <delete id="deleteUser" parameterType="Integer">
    	DELETE FROM edel_notice WHERE num=#{num}
    </delete>
    
    <update id="updateNotice" parameterType="app.review.dstp.vo.StoreVo">
    	UPDATE edel_notice
    	SET title=#{title}, content=#{content}
    	WHERE num=#{num}
    </update>
</mapper>